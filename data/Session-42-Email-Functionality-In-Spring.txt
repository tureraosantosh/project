Session-42-Email-Functionality-In-Spring Boot.
--------------------------------------------------------
Last session : Swagger & Swagger UI Configuration
-------------------------------------------------------------------------
-> Swagger is used to generate documentation for Rest api

-> Swagger UI is used for testing rest api.
-------------------------------------------------------------------------
Today's session : Email Functionality In Spring Boot
------------------------------------------------------------------------
-> To work with Email functionality we need to configure SMTP properties

Note: Here we will use gmail smtp properties but in company they will provide company SMTP properties.

-> To send emails, spring boot provided 'spring-boot-starter-mail'

-> By adding above dependency we will get 'JavaMailSender'

-> 'JavaMailSender' is used to send emails in boot application.

-> SimpleMessage object is used to send mails with simple text.

-> MimeMessage object is used to send mails with rich text and attachments.
------------------------------------------------------------------------
package com.ashokit.util;

import javax.mail.internet.MimeMessage;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Component;

@Component
public class EmailUtils {

	@Autowired
	private JavaMailSender mailSender;

	public boolean sendEmail(String to, String subject, String body) {
		boolean isSent = false;
		MimeMessage mimeMessage = mailSender.createMimeMessage();
		try {
			MimeMessageHelper mimeMessageHelper = new MimeMessageHelper(mimeMessage, true);
			mimeMessageHelper.setSubject(subject);
			mimeMessageHelper.setTo(to);
			mimeMessageHelper.setText(body);
			mailSender.send(mimeMessageHelper.getMimeMessage());
			isSent = true;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return isSent;
	}
}
-------------------------------------------------------------------------
Hi  {FNAME}, {LNAME} :
<br/>

Welcome to Ashok IT family, Your registration is almost completed.
Plese use below details to unlock your account.<br/>
<br/>

Temporary Password : {TEMP-PWD}<br/>
<br/>

<a href='http://localhost:9090/unlockAcc?email={EMAIL}'>

Click Here To Unlock Your Account</a> <br/>
<br/>

Thanks & Regards,<br/>
Ashok IT.<br/>